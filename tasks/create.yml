- assert:
    that:
     - "letsencrypt_admin_email is defined"

- name: Creates directories
  file: path="{{ item }}" owner="{{ letsencrypt_user }}" group="{{ letsencrypt_user }}" state=directory
  with_items: "{{ letsencrypt_dirs }}"

- name: Generate {{ letsencrypt_domain }} nginx conf
  template: src="{{ letsencrypt_nginx_template }}" dest={{ letsencrypt_nginx_config_file }}

- name: Restart nginx
  service: name=nginx state=restarted

- name: "Run {{ letsencrypt_image }}"
  docker_container:
    name: "{{ letsencrypt_container_name }}"
    image: "{{ letsencrypt_image }}"
    command: "/usr/local/bin/certbot certonly --webroot -w /tmp/webroot -d {{ letsencrypt_domain }} --agree-tos --email {{ letsencrypt_admin_email }} -n "
    detach: false
    volumes:
      - "{{ letsencrypt_data_dir }}:/etc/letsencrypt"
      - "{{ letsencrypt_webroot }}:/tmp/webroot"

- name: Remove container {{ letsencrypt_container_name }}
  docker_container:
    name: "{{ letsencrypt_container_name }}"
    state: absent

- name: Install libssl
  apt: name="libssl1.0.0"

- stat: path="{{ letsencrypt_dhparam_dir }}/dhparam.pem"
  register: dhparam

- name: Create dhparam
  shell: "openssl dhparam -out {{ letsencrypt_dhparam_file }} 2048"
  when: dhparam.stat.exists == false
